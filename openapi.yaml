openapi: 3.0.1
info:
  title: StudentRating
  version: 1.0.0
servers:
- url: https://rating.swagger.io/v2
- url: http://rating.swagger.io/v2
tags:
- name: student
  description: Everything about your students
- name: teacher
  description: Operations about teacher
paths:
  /student:
    post:
      tags:
      - student
      summary: Add a new student to the rating
      operationId: addStudent
      requestBody:
        description: student object that needs to be added to the rating
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Student'
          application/xml:
            schema:
              $ref: '#/components/schemas/Student'
        required: true
      responses:
        200:
            description: successful operation
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Student'
        405:
          description: Invalid input
          content: {}
      security:
      - rating_auth:
        - write:students
        - read:students
      x-codegen-request-body-name: body
      
    get:
      tags:
      - student
      description: Returns a list of best rating values
      operationId: Get_sorted_rating
      responses:
        200:
          description: successful operation
          content:
            application/xml:
              schema:
                $ref: '#/components/schemas/Student'
            application/json:
              schema:
                $ref: '#/components/schemas/Student'
        404:
          description: students not found
        
    
      
  /student/{sid}:
    put:
      tags:
      - student
      summary: Updates a rating of student
      operationId: updateStudentWithForm
      parameters:
      - name: sid
        in: path
        description: ID of student that needs to be updated
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              properties:
                name:
                  type: string
                  description: Updated name of the student
                status:
                  type: string
                  description: Updated status of the student
      responses:
        200:
            description: successful operation
        405:
          description: Invalid input
          content: {}
      security:
      - rating_auth:
        - write:students
        - read:students
        
   
    delete:
      tags:
      - student
      summary: Deletes a student
      operationId: deleteStudent
      parameters:
      - name: sid
        in: path
        description: student id to delete
        required: true
        schema:
          type: integer
          format: int64
      responses:
        200:
            description: successful operation
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Student'
        400:
          description: Invalid ID supplied
          content: {}
        404:
          description: student not found
          content: {}
      security:
      - rating_auth:
        - write:students
        - read:students
        

  
  /teacher:
    post:
      tags:
      - teacher
      summary: Create teacher
      description: This can only be done by the logged in teacher.
      operationId: createTeacher
      requestBody:
        description: Created teacher object
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/Teacher'
        required: true
      responses:
        200:
          description: successful operation
          content: {}
      x-codegen-request-body-name: body
  /teacher/login:
    get:
      tags:
      - teacher
      summary: Logs teacher into the system
      operationId: loginTeacher
      parameters:
      - name: username
        in: query
        description: The user name for login
        required: true
        schema:
          type: string
      - name: password
        in: query
        description: The password for login in clear text
        required: true
        schema:
          type: string
      responses:
        200:
          description: successful operation
          headers:
            X-Rate-Limit:
              description: calls per hour allowed by the user
              schema:
                type: integer
                format: int32
            X-Expires-After:
              description: date in UTC when token expires
              schema:
                type: string
                format: date-time
          content:
            application/xml:
              schema:
                type: string
            application/json:
              schema:
                type: string
        400:
          description: Invalid username/password supplied
          content: {}
  /teacher/logout:
    get:
      tags:
      - teacher
      summary: Logs out current logged in teacher session
      operationId: logoutTeacher
      responses:
        200:
          description: successful operation
          content: {}
          
      security:
      - rating_auth:
        - write:students
        - read:students
      x-codegen-request-body-name: body
  /teacher/{username}:
    
    delete:
      tags:
      - teacher
      summary: Delete teacher
      description: This can only be done by the logged in user.
      operationId: deleteTeacher
      parameters:
      - name: username
        in: path
        description: The name that needs to be deleted
        required: true
        schema:
          type: string
      responses:
        200:
            description: successful operation
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Teacher'
        400:
          description: Invalid username supplied
          content: {}
        404:
          description: teacher not found
          content: {}
      security:
      - rating_auth:
        - write:students
        - read:students
      x-codegen-request-body-name: body
components:
  schemas:
    Teacher:
      type: object
      properties:
        tid:
          type: integer
          format: int64
        username:
          type: string
        firstName:
          type: string
        lastName:
          type: string
        password:
          type: string
      xml:
        name: Teacher
    Student:
      required:
      - name
      type: object
      properties:
        sid:
          type: integer
          format: int64 
        firstname:
          type: string
        lastname:
          type: string
        total_rating:
          type: integer
          format: int64
      xml:
        name: Student
  securitySchemes:
      rating_auth:
        type: oauth2
        flows:
          implicit:
            authorizationUrl: http://petstore.swagger.io/oauth/dialog
            scopes:
              write:credits: modify students' data
              read:credits: read data about student
     
